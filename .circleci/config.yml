version: 2.1
commands:
  persist-env:
    steps:
      - run: cat ${BASH_ENV} >> /tmp/.env
      - persist_to_workspace:
          root: /tmp
          paths:
            - .env
  attach-env:
    steps:
      - attach_workspace:
          at: /tmp
      - run: cat /tmp/.env >> ${BASH_ENV}

  check-skip:
    steps:
      - run:
          command: |
            if [[ $SKIP == true ]]
            then
              echo "No .go files were modified - skipping release" 
              circleci step halt
            fi

  setup-ssh-key:
    steps:
      - run:
          command: build-scripts/setup-ssh-keys.sh

  validate-release-version-was-incremented:
    steps:
      - run:
          command: |
            set +o errexit
            git diff --name-only HEAD~ HEAD | egrep -q "\.go$"
            if [[ $? == 0 ]]
            then
              echo 'export SKIP=false' 
              echo 'export SKIP=false' >> ${BASH_ENV}
              .circleci/validate-release.sh
            else
              echo 'export SKIP=true'
              echo 'export SKIP=true' >> ${BASH_ENV}
            fi

            exit 0

jobs:
  validate:
    docker:
      - image: circleci/golang:1.13.6
    steps:
      - checkout
      - validate-release-version-was-incremented
      - persist-env
  test:
    docker:
      - image: circleci/golang:1.13.6
    steps:
      - attach-env
      - checkout
      # Temporarily disable integration tests since the integration environment is broken
      #- run: make testacc
  build:
    docker:
      - image: circleci/golang:1.13.6
    steps:
      - attach-env
      - checkout
      - setup-ssh-key
      - run: make
  release:
    docker:
      - image: circleci/golang:1.13.6
    steps:
      - attach-env
      - check-skip
      - checkout
      - setup-ssh-key
      - run: make
      - run: bash .circleci/github-release.sh

workflows:
  version: 2
  build_and_test:
    jobs:
      - validate:
          context: terraform-release
      - test:
          context: terraform-acceptance
          requires:
            - validate
      - build:
          context: terraform-release
          filters:
            branches:
              ignore: master
          requires:
            - test
      - release:
          context: terraform-release
          filters:
            branches:
              only: master
          requires:
            - test
